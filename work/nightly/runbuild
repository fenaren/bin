#!/bin/bash

print_usage() {
    echo "Usage: runbuild [-h|--help] [-e|--email <address>] <source script>"
}

EMAIL=
EMAIL_SET=false

BUILDSRC=
BUILDSRC_SET=false

while [ -n "$1" ]
do
    case "$1" in

        -e | --email)
            EMAIL_SET=true
            EMAIL="$2"
            shift
            ;;

        -h | --help)
            print_usage
            exit 0
            ;;

        *)
            BUILDSRC="$*"
            BUILDSRC_SET=true
            break
            ;;
    esac

    # We're done with the current argument, move to the next.
    shift
done

if [ "$BUILDSRC_SET" == "false" ]; then
    print_usage
    exit 1
fi

if [ -f "$BUILDSRC" ]; then
    # Source the given build script and save the return code
    . "$BUILDSRC" > /tmp/build.out.$$ 2> /tmp/build.error.$$
    RETURN="$?"
else
    # Evaluate BUILDSRC as it must be a command
    eval "$BUILDSRC" > /tmp/build.out.$$ 2> /tmp/build.error.$$
    RETURN="$?"
fi

# Move the build output files into wherever we are now
mv /tmp/build.out.$$ build.out
mv /tmp/build.error.$$ build.error

# If the build failed and an email address was provided, email a failure report
if [ "$RETURN" != 0 ] && [ "$EMAIL_SET" == "true" ]; then

    SUBJECT="Subject:$BUILDSRC build failed"

    if [ -f build.error ]; then
        BODY=`cat build.error`
    else
        BODY="Build error output not available"
    fi

    # Send the email
    echo -e "$SUBJECT\n\n$BODY" | sendemail --to "$EMAIL" --smtp-relay smtp.larc.nasa.gov
fi

exit "$RETURN"
