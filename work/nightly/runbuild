#!/bin/bash

print_usage() {
    echo "Usage: runbuild [-h|--help] [-e|--email <address>] <source script>"
}

if [ -z "$EMAIL" ]; then
    EMAIL=
    EMAIL_SET=false
else
    EMAIL="$EMAIL"
    EMAIL_SET=true
fi

BUILDSRC=
BUILDSRC_SET=false

while [ -n "$1" ]
do
    case "$1" in

        -e | --email)
            EMAIL_SET=true
            EMAIL="$2"
            shift
            ;;

        -h | --help)
            print_usage
            exit 0
            ;;

        *)
            BUILDSRC="$1"
            BUILDSRC_SET=true
            break
            ;;
    esac

    # We're done with the current argument, move to the next.
    shift
done

if [ "$BUILDSRC_SET" == "false" ]; then
    print_usage
    exit 1
fi

BASENAME=`echo $BUILDSRC | sed "s:.*/::"`

BUILD_OUT=~/.build.out.$BASENAME
BUILD_ERR=~/.build.err.$BASENAME

if [ -f "$BUILDSRC" ]; then
    # Run the given build script and save the return code
    ./"$BUILDSRC" > "$BUILD_OUT" 2> "$BUILD_ERR"
    RETURN="$?"
else
    # Evaluate BUILDSRC as it must be a command
    eval "$BUILDSRC" > "$BUILD_OUT" 2> "$BUILD_ERR"
    RETURN="$?"
fi

# If the build failed and an email address was provided, email a failure report
if [ "$RETURN" != 0 ] && [ "$EMAIL_SET" == "true" ]; then

    SUBJECT="Subject:$BASENAME build failed (exit code $RETURN)"

    if [ -f "$BUILD_ERR" ]; then
        BODY=`cat "$BUILD_ERR"`
    else
        BODY="Build error output not available"
    fi

    # Send the email
    echo -e "$SUBJECT\n\n$BODY" | sendemail --to "$EMAIL" --smtp-relay "$SMTP_RELAY"
fi

exit "$RETURN"
